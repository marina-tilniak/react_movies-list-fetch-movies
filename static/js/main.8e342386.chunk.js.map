{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_URL","getMovie","title","a","fetch","response","json","FindMovie","setMovies","useState","setMovie","setTitle","hasError","setHasError","handleSearchButton","movieFromServer","onSubmit","event","preventDefault","find","currentMovie","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"yTAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,+CCffC,G,MAAU,+CAET,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,eAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIJ,GAAJ,OAAcE,IADrC,cACCG,EADD,yBAGEA,EAASC,QAHX,4C,sBCUA,IAAMC,EAA6B,SAAC,GAA2B,IAAzBV,EAAwB,EAAxBA,OAAQW,EAAgB,EAAhBA,UACnD,EAA0BC,mBAAuB,MAAjD,mBAAOpB,EAAP,KAAcqB,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOP,EAAP,KAAcS,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAkB,uCAAG,4BAAAX,EAAA,sEACKF,EAASC,GADd,QACnBa,EADmB,QAGJhB,QACnBc,GAAY,GAGdH,EAASK,GAPgB,2CAAH,qDAyBxB,OACE,qCACE,uBACEzB,UAAU,aACV0B,SAdW,SAACC,GAChBA,EAAMC,iBAEG,OAAL7B,QAAK,IAALA,KAAOU,SAAWF,EAAOsB,MAAK,SAAAC,GAAY,OAAI/B,EAAMU,SAAWqB,EAAarB,WAC9ES,EAAU,GAAD,mBAAKX,GAAL,CAAaR,KAGxBsB,EAAS,KAKP,UAIE,sBAAKrB,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQ+B,QAAQ,cAAjC,wBAGE,qBAAK/B,UAAU,UAAf,SACE,uBACEgC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZlC,UAAWmC,IAAW,gBAAiB,CACrC,YAAab,IAEfc,MAAOxB,EACPyB,SAlCM,SAACV,GACnBN,EAASM,EAAMW,OAAOF,OACtBb,GAAY,WAqCLD,GACC,mBAAGtB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEgC,KAAK,SACLhC,UAAU,kBACVuC,QAASf,EAHX,4BASF,qBAAKxB,UAAU,UAAf,SACE,wBACEgC,KAAK,SACLhC,UAAU,oBAFZ,qCAUN,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,sBACM,OAALD,QAAK,IAALA,OAAA,EAAAA,EAAOU,SAAU,cAAC,EAAD,CAAWV,MAAOA,WC5F/ByC,EAAgB,WAC3B,MAA4BrB,mBAAkB,IAA9C,mBAAOZ,EAAP,KAAeW,EAAf,KAEA,OACE,sBAAKlB,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWO,OAAQA,EAAQW,UAAWA,UCV9CuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8e342386.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=93e72efb&t=';\n\nexport async function getMovie(title: string): Promise<Movie> {\n  const response = await fetch(`${API_URL}${title}`);\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n  setMovies: (movie: Movie[]) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [title, setTitle] = useState('');\n  const [hasError, setHasError] = useState(false);\n\n  const handleSearchButton = async () => {\n    const movieFromServer = await getMovie(title);\n\n    if (!movieFromServer.imdbID) {\n      setHasError(true);\n    }\n\n    setMovie(movieFromServer);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasError(false);\n  };\n\n  const addMovie = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (movie?.imdbID && !movies.find(currentMovie => movie.imdbID === currentMovie.imdbID)) {\n      setMovies([...movies, movie]);\n    }\n\n    setTitle('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={addMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames('input is-link', {\n                  'is-danger': hasError,\n                })}\n                value={title}\n                onChange={handleInput}\n              />\n            </div>\n          </label>\n\n          {hasError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleSearchButton}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie?.imdbID && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}